<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<insert id="memberEnroll">
		insert into
			member
		values (
			#{ memberId },
			#{ password },
			#{ name },
			#{ email },
			#{ phone },
			#{ addr },
			#{ addrDetail },
			#{ postCode },
			#{ memberRole },
			default,
			default,
			default
		)
	</insert>
	
	<insert id="authEnroll">
		insert into
			auth
		values (
			#{ memberId },
			#{ authority }
		)
	</insert>
	
	<select id="selectOneMember" resultMap="memberMap">
		select
			*
		from
			member
		where
			member_id = #{ memberId }	
	</select>
	
<!-- 	<select id="selectMemberList" resultMap="memberMap">
		select
			*
		from
			member
		order by
			no desc
	</select> -->
	
	<resultMap type="member" id="memberMap">
	</resultMap>
	
	<delete id="deleteMember">
		delete from 
			member
		where 
			member_id = #{ memberId }	
	</delete>
	
	<update id="updatePassword">
		update 
			member 
		set 
			password = #{ password }
		where 
			member_id = #{ memberId }
	</update>
	
	<update id="updateMember">
		update
			member
		set
		 	name = #{ name },
			email = #{ email },
			phone = #{ phone },
			addr = #{ addr },
			addr_detail = #{ addrDetail },
			post_code = #{ postCode }
		where
			member_id = #{ memberId }
			
	</update>
	
	<select id="selectBoardTotalContents" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	member	
	</select>
	
		<select id="searchMemberList" resultMap="memberMap">
		select 
			*
		from(
        	select
                rownum as rnum,
                M.*
        	from 
                (select
                       *
                from
                    Member
                <where>
                    <if test='searchType.equals("memberId")'>
                    upper(member_id) like '%'||upper(#{ keyword })||'%'
                    </if>
                    <if test='searchType.equals("memberName")'>
                    upper(name) like '%'||upper(#{ keyword })||'%'
                    </if>
                </where>
                order by enroll_date
                )M
		)
		where rnum between #{ start } and #{ end } 
	</select>
	
	
	<select id="totalSearchMemberList" resultType="_int">
		select 
			count(*)
		from
			member
		<where>
			<if test='searchType.equals("memberId")'>
			upper(member_id) like '%'||upper(#{ keyword })||'%'
			</if>
			<if test='searchType.equals("memberName")'>
			upper(name) like '%'||upper(#{ keyword })||'%'
			</if>
		</where>
	</select>	
	
	<select id="selectMemberList" resultMap="memberMap">
        select 
                *
		from(
        	select
                rownum as rnum,
                M.*
        	from 
                (select
                       *
                from
                    member
                order by enroll_date
                )M
		)
		where rnum between #{ start } and #{ end }	
	</select>
	
	<select id="findId" resultMap="memberMap">
		select
			*
		from
			member
		where
				name = #{ memberName }
			and
				email = #{ memberEmail }
	</select>
	
	<select id="findPwd" resultMap="memberMap">
		select
			*
		from
			member
		where
				member_id = #{ memberId }
			and
				name = #{ memberName }
			and
				email = #{ memberEmail }
	</select>
	
	<update id="updatePwd">
		update
			member
		set
			password = #{ password }
		where 
			member_id = #{ memberId }
	</update>
	
</mapper>