<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 정적 파일에 대한 요청은 mvc 패턴이 아닌 실제 resources 하위에서 조회 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.tickets" />
	
	<!-- handler interceptor 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="com.kh.tickets.common.interceptor.LoggerInterceptor"
						id="LoggerInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/board/**"/>
			<!-- spring 3.2 이상 사용가능 -->
			<exclude-mapping path="/board/boardList.do"/>
			<beans:bean class="com.kh.tickets.common.interceptor.LoginInterceptor"
						id="loginInterceptor"/>
		</interceptor>
	</interceptors> 
	
	
	<!--  aop 어노테이션 처리용 -->
	<!--  application-context의 transaction관련 빈 설정을 가져와서 적용 -->
	<aop:aspectj-autoproxy />
	
	<!--  file upload를 처리할 빈 등록 : id - multipartResolver -->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>
	
	<!-- jsonView빈 등록 및 BeanNameViewResolver 등록 -->
	<!-- mvc:annotation-driven 태그에 의해 자동처리되므로 생략가능 -->
	<beans:bean class="net.sf.json.spring.web.servlet.view.JsonView" 
				id="jsonView"/>
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
				id="viewResolver">
			<beans:property name="order" value="1" />
	</beans:bean>
	
	
</beans:beans>
